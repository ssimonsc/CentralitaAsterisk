[general]

[default]

[phones]

;**********************SERVIZO DE CHAMADAS********************************************************
exten => _1XX,1,Answer(1000) 									;*Collemos a chamada entrante
												;*
same => n,Set(UsuarioAoQueChamamos=${EXTEN}) 							;*Gardamos o numero ao que chamamos
same => n,Set(NosoUsuario=${CALLERID(num)})							;*Gardamos o noso usuario
												;*
same => n,GotoIf($[${DB(${UsuarioAoQueChamamos}/${NosoUsuario})}=1]?ListaNegra)			;*Comprobamos se estamos na lista negra do numero ao que chamamos
												;*
same => n,GotoIf($[${DB(${UsuarioAoQueChamamos}/DND)}=1]?busy)					;*Comprobamos se ten o servizo Non molesar activado
												;*
same => n,Dial(SIP/${EXTEN},15,m) 								;*Establecemos a chamada, cun tempo maximo para que o usuario responda de 15 segundos con musica en espera
same => n,GotoIf($[${DIALSTATUS}=NOANSWER]?find:busy)						;*Se o usuario non respondeu pasados 15 segundos pasamos ao servizo findme
												;*Se o usuario rexeito a chamada saltamos ao buzon de voz coa mensaxe de ocupado
												;*
same => n(find),GotoIf($[${DB_EXISTS(${UsuarioAoQueChamamos}/numero1)}]?:preg2)			;*Comprobamos se ten unha extension secundaria á que poder chamar
same => n,PlayBack(call&first&extension)							;*	
same => n,Dial(SIP/${DB(${UsuarioAoQueChamamos}/numero1)},15,m)					;*Chamamos á primeira extension secundaria
same => n,GotoIf($[${DIALSTATUS}=NOANSWER]?preg2:busy)						;*Se non reponde tras 15 segundos comprobamos coa segunda extension									
same => n(preg2),GotoIf($[${DB_EXISTS(${UsuarioAoQueChamamos}/numero2)}]?:nondisponhibel)	;*Se non ten segunda extension finalizamos, se a ten chamamos a esta
same => n,PlayBack(call&second&extension)							;*
same => n,Dial(SIP/${DB(${UsuarioAoQueChamamos}/numero2)},15,m)					;*Chamamos á segunda extension secundaria
same => n,GotoIf($[${DIALSTATUS}=NOANSWER]?nondisponhibel:busy)					;*Se non responde saltamos ao buzon de voz de non disponhibel
												;*
same => n(nondisponhibel),VoiceMail(${UsuarioAoQueChamamos}@vmphones,u)				;*Buzon de voz con mensaxe de non dispoñibel
same => n,Hangup 										;*
												;*
same => n(busy),VoiceMail(${UsuarioAoQueChamamos}@vmphones,b)                               	;*Buzon de voz coa mensaxe de ocupado
same => n,Hangup 										;*
												;*
same => n(ListaNegra),PlayBack(privacy-you-are-blacklisted)                     		;*Vostede esta na lista negra
smae => n,Hangup 										;*
;*************************************************************************************************

;CHAMADA AO USUARIO SERGIO
exten => sergio,1,Answer(1000)
same => n,Set(caller2=${EXTEN})
same => n,GotoIf($[${DB(${caller2}/DND)}=1]?colgar)
same => n,Dial(SIP/${EXTEN},15,m)
same => n(colgar),Hangup

;********************************************************************************************************************************************

;***CHAMADA A UNHA EXTENSION QUE NON EXISTE***
exten => _X.,1,Answer(1000)		    ;*
same => n,Playback(pbx-invalid)		    ;*
same => n,Hangup 			    ;*
;*********************************************

;*********SERVIZO MENU************
exten => 700,1,Goto(menu,s,1) 	;*
;*********************************



;********************************************************************************************************************************************
;*****************************************************  	MENU IVR		*****************************************************************
;********************************************************************************************************************************************


[menu]

exten => s,1,Answer(1000)
same => n,PlayBack(bienvenido&menu)
same => n(loop),Background(press-1&service&voice-mail-system&press-2&service&do-not-disturb&press-3&service&privacy-blacklisted&press-4&service&extensions)
same => n,WaitExten(10)



;*************XESTION DO MEU VOICEMAIL(1)*****************
exten => 1,1,Answer(1000)				;*
same => n,VoiceMailMain(${CALLERID(num)}@vmphones,u)	;*Entramos no noso buzon de voz
same => n,Hangup 					;*
same => n,Goto(s,loop)					;*
;*********************************************************




;************SERVIZO NON MOLESTAR(2)**********************
exten => 2,1,Answer					;*
same => n,Set(NosoUsuario=${CALLERID(num)})		;*Obtemos a extension denden a que chamamos ao servizo
same => n,GotoIf($[${DB(${NosoUsuario}/DND)}=1]?deshab)	;*Comprobamos se ten habilitado o servizo non molestar
same => n,Set(DB(${NosoUsuario}/DND)=1)			;*Se o tiña deshabilitado o habilitamos
same => n,PlayBack(do-not-disturb&enabled)		;*
same => n,Goto(fin)					;*
same => n(deshab),Set(DB(${NosoUsuario}/DND)=0)		;*En caso contrario o deshabilitamos
same => n,PlayBack(do-not-disturb&disabled) 		;*
same => n(fin),Hangup  					;* 
same => n,Goto(s,loop)					;*
;*********************************************************




;*****************SERVIZO LISTA NEGRA(3)**********************************
exten => 3,1,Answer(1000)						;*
same => n,Set(minhaBlackList=${CALLERID(num)})				;*Gardamos o noso usuario co nome minhaBlackList
same => n,GotoIf($[${DB_EXISTS(${minhaBlackList}/contador)}]?existe)	;*Comprobamos se o contador da blacklist do usuario existe
same => n,Set(DB(${minhaBlackList}/contador)=0)				;*Se non o creamos inicializado a 0
same => n(existe),Goto(ListaNegra,s,1) 					;*Saltamos ao contexto ListaNegra
;*************************************************************************




	
;********SERVIZO FINDEME(4)*******************
exten => 4,1,Answer(1000)	            ;*
same => n,Set(NosoUsuario=${CALLERID(num)}) ;*Gardamos o noso usuario
same => n,Goto(FindMe,s,1) 		    ;*Saltamos ao contexto FindeMe
;*********************************************




;*********OPCION INVALIDA******************
exten => i,1,Playback(pm-invalid-option) ;*
same => n,Goto(s,loop)			 ;*
;******************************************

;*********TIME-OUT********************
exten => t,1,Playback(vm-goodbye)   ;*
same => n,Hangup   		    ;*
;*************************************




;***************************************************************************************************************************************************************************


[ListaNegra]
exten => s,1,Answer(1000)
same => n(loop),Background(press-1&added&extension&press-2&removed&extension)
same => n,WaitExten(10)

;***************ENGADIR EXTENSION Á LISTA NEGRA***************************************
exten => 1,1,GotoIf($[${DB(${minhaBlackList}/contador)}=3]?non)			    ;*Comprobamos se o usuario xa ten 3 extensions gardadas na lista negra
same => n,Read(usuarioBL,enter-num-blacklist,3)					    ;*Gardamos en usuarioBL a extension que introduzcamos polo DTMF
same => n,GotoIf($[${DB_EXISTS(${minhaBlackList}/${usuarioBL})}]?(non))		    ;*Comprobamos que ese usuario non estea introducido xa na lista negra
same => n,Set(DB(${minhaBlackList}/${usuarioBL})=1)			            ;*Gardamos o usuario introducido na nosa lista negra
same => n,Set(DB(${minhaBlackList}/contador)=$[${DB(${minhaBlackList}/contador)}+1]);*Aumentamos en 1 o contador
same => n,PlayBack(added&extension&privacy-blacklisted)				    ;*
same => n(non),Hangup 								    ;*
;*************************************************************************************


;****************ELIMINAR EXTENSION DA LISTA NEGRA************************************
exten => 2,1,Read(usuarioBL,entr-num-rmv-blklist,3)				    ;*
same => n,GotoIf($[${DB_EXISTS(${minhaBlackList}/${usuarioBL})}]?existe2)	    ;*Gardamos en usuarioBL a extension que introduzcamos polo DTMF
same => n,PlayBack(extension&is-not-in-the&privacy-blacklisted)			    ;*
same => n,Hangup 								    ;*
same => n(existe2),verbose(${DB_DELETE(${minhaBlackList}/${usuarioBL})})	    ;*Eliminamos a extension introducido da nosa lista negra
same => n,Set(DB(${minhaBlackList}/contador)=$[${DB(${minhaBlackList}/contador)}-1]);*
same => n,PlayBack(removed&extension&privacy-blacklisted)			    ;*
same => n(non),Hangup                                                               ;*
;*************************************************************************************


;*********OPCION INVALIDA******************
exten => i,1,Playback(pm-invalid-option) ;*
same => n,Goto(s,loop)			 ;*
;******************************************

;*********TIME-OUT********************
exten => t,1,Playback(vm-goodbye)   ;*
same => n,Hangup 		    ;*
;*************************************

;***********************************************************************************************************************************************************************


[FindMe]
exten => s,1,Answer(1000)
same => n(loop),Background(press-1&added&extension&press-2&removed&extension)
same => n,WaitExten(10)



;***************ENGADIR EXTENSION SECUNDARIA**************************************
exten => 1,1,GotoIf($[${DB_EXISTS(${NosoUsuario}/numero1)}]?preg2)		;*Primeiro comprobamos se xa ten unha extension secundaria habilitada en numero1, se a ten saltamos a preg2
same => n,Read(numero1,please-enter-the&your&first&extension,3)		 	;*Se non a ten o usuario garda a extensions ecundaria desexada na variabel numero1
same =>	n,GotoIf($[${NosoUsuario}=${numero1}]?invalido)				;*Se a extension introducida é a mesma que a súa extension principal finalizamos
same => n,GotoIf($[${DB_EXISTS(${NosoUsuario}/numero2)}]?:engadir1)		;*Comprobamos se existen unha extension secundario en numero2
same =>	n,GotoIf($[${DB(${NosoUsuario}/numero2)}=${numero1}]?:engadir1)		;*Se existe, comprobamos que a extension introducida polo usuario non esté repetida, se o está finalizamos
same => n,PlayBack(extension&repeater)						;*
same => n,Hangup 								;*
same => n(engadir1),Set(DB(${NosoUsuario}/numero1)=${numero1})			;*Se a extension secundaria introducida non e igual á principal e non esta repetida a engadimos a numero1
same => n,PlayBack(added&your&first&extension)					;*
same => n,Hangup 								;*
										;*
same => n(preg2),GotoIf($[${DB_EXISTS(${NosoUsuario}/numero2)}]?fin)		;*Facemos o memso de antes pero con numero2, pois permitimos ao usuario ter hasta duas extensions secundarias
same => n,Read(numero2,please-enter-the&your&second&extension,3)		;*
same =>	n,GotoIf($[${NosoUsuario}=${numero2}]?invalido)				;*
same =>	n,GotoIf($[${DB(${NosoUsuario}/numero1)}=${numero2}]?:engadir2)		;*
same => n(invalido),PlayBack(extension&repeater)				;*
same => n,Hangup 								;*
same => n(engadir2),Set(DB(${NosoUsuario}/numero2)=${numero2})			;*
same => n,PlayBack(added&your&second&extension)					;*
same => n(fin),Hangup 								;*
;*********************************************************************************



;****************ELIMINAR EXTENSION SECUNDARIA************************************
exten => 2,1, Read(numero,please-enter-the&your&extension,3)			;*Gardamos a extension a borrar introducida polo usuario na variabel numero
										;*
same => n, GotoIf($[${DB(${NosoUsuario}/numero1)}=${numero}]?borrar1)		;*Comprobamos se a extension introducida pertence ao usuario
same => n, GotoIf($[${DB(${NosoUsuario}/numero2)}=${numero}]?borrar2)		;*
same => n,Hangup 								;*
										;*
same => n(borrar1),${DB_DELETE(${NosoUsuario}/numero1)}				;*Borramos a extension secundaria
same => n,PlayBack(removed&your&extension)					;*
same => n,Hangup 								;*
same => n(borrar2),${DB_DELETE(${NosoUsuario}/numero2)}				;*
same => n,PlayBack(removed&your&extension)					;*
same => n,Hangup 								;*
;*********************************************************************************


;*********OPCION INVALIDA******************
exten => i,1,Playback(pm-invalid-option) ;*
same => n,Goto(s,loop)			 ;*
;******************************************

;*********TIME-OUT********************
exten => t,1,Playback(vm-goodbye)   ;*
same => n,Hangup 		    ;*
;*************************************
